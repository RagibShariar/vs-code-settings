/************
 *  editor  *
 ************/
// == === != <= >= </> & @ </div> --- www && ++ ----- <> [] % $
{
  "editor.fontSize": 17,
  // "editor.fontFamily": "Operator Mono, Cascadia Code,Fira Code, Consolas",
  // "editor.fontFamily": "Operator Mono SSm Nerd Lig",
  // "editor.fontFamily": "Operator Mono SSM Lig",
  // "editor.fontFamily": "Operator Mono Lig",
  // "editor.fontFamily": "Fira Code",
  "editor.fontFamily": "SF Mono",
  // "editor.fontFamily": "JetBrains Mono",
  // "editor.letterSpacing": -0.7,
  "editor.lineHeight": 27,
  // "editor.fontWeight": "500",
  // "editor.fontLigatures": "'calt','ss01','ss02','ss03','ss04','ss05','ss06','zero', 'onum'",
  "editor.fontLigatures": true,
  "editor.wordWrap": "on",
  "editor.minimap.enabled": true,
  "editor.minimap.autohide": true,
  "editor.minimap.renderCharacters": false,
  "editor.inlineSuggest.showToolbar": "always",

  /************
   *  cursor  *
   ************/
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorBlinking": "expand",
  "editor.cursorWidth": 3,

  /***************************************
   *  config related to code formatting  *
   ***************************************/
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },
  "path-autocomplete.extensionOnImport": true,
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "typescript.validate.enable": true,
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,
  "[javascript]": {
    // "editor.defaultFormatter": null,
    // "editor.formatOnSave": false,
  },
  "[javascriptreact]": {
    // "editor.formatOnSave": false,
    // "editor.defaultFormatter": null
  },
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.fixAll.tslint": "explicit",
    "source.organizeImports": "explicit"
  },
  "eslint.alwaysShowStatus": true,
  "eslint.run": "onSave",

  /****************
   *   terminal   *
   ****************/
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.cursorWidth": 2,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",

  /****************************
   *  editor customization  *
   ****************************/
  "workbench.colorCustomizations": {
    "editorBracketHighlight.foreground1": "#ffe9ce",
    "editorBracketHighlight.foreground2": "#49e9a6",
    "editorBracketHighlight.foreground3": "#49d6e9",
    "editorBracketHighlight.foreground4": "#df769b",
    "editorBracketHighlight.foreground5": "#ffba31",
    //

    "[Noctis Azureus]": {
      "editor.background": "#080808",
      "editorGutter.background": "#010107",
      "tab.activeBackground": "#010107",
      "terminal.background": "#010107",
      // "sideBar.background": "#010107",
      "tab.activeBorder": "#DCDCDC",
      "tab.activeBorderTop": "#DCDCDC",
      "editorLineNumber.activeForeground": "#DCDCDC"
    },

    "[Gruvbox Dark Hard]": {
      "editor.wordHighlightBorder": "#17E5E699",
      "editor.wordHighlightBackground": "#17E5E630",
      "editor.wordHighlightStrongBorder": "#bbe67e99",
      "editor.wordHighlightStrongBackground": "#bbe67e30",
      "editorBracketMatch.border": "#17E5E699",
      "editorCursor.foreground": "#d4922f",
      "editorLineNumber.activeForeground": "#fabd2f",
      "sideBar.border": "#3c383680",
      "activityBar.border": "#3c383680",
      "editorGroupHeader.tabsBorder": "#3c383680"
    },
    "[Learn with Sumit - Shades of Grey]": {
      "editor.wordHighlightBackground": "#17E5E630",
      "editor.wordHighlightStrongBorder": "#bbe67e99",
      "editor.wordHighlightStrongBackground": "#bbe67e30",
      "editor.background": "#1f2428",
      "activityBar.background": "#1f2428",
      "titleBar.activeBackground": "#1f2428",
      "activityBar.border": "#1f2428",
      "panel.border": "#5f616750",
      "editorCursor.foreground": "#00E8C6"
    },
    "[Learn with Sumit - Party]": {
      "editor.wordHighlightBorder": "#30dcdc",
      "editor.wordHighlightStrongBorder": "#d47d13",
      "editorLineNumber.activeForeground": "#30dcdc"
    },
    "editor.lineHighlightBackground": "#1073cf2d",
    "editor.lineHighlightBorder": "#9fced11f"
  },

  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "name": "NORMAL",
        "scope": ["entity.name.type.class"],
        "settings": {
          "fontStyle": ""
        }
      },
      {
        "name": "ITALIC",
        "scope": [
          // all comment types
          "comment",

          // true, false, null
          "constant.language",

          // in, void, delete, instanceof
          "keyword.operator.expression",

          // debugger
          // "keyword.other",

          // super, this, arguments
          "variable.language",

          // attributes in html, jsx, etc.
          "entity.other.attribute-name",

          // static, extends, async, private, public, implements
          // constructor, const, let, var, enum, class, function, interface
          // no explicit scopes for constructor, const, let, var
          // also no explicit scope for function without the arrow
          // therefore we enable all storage and explictly exclude the arrow in another scope
          // "storage",
          "storage.type",

          //  no explicit scope for the eval keyword yet
          //  can be targeted with the scope below, but scope is too broad
          "support.function",

          //  no explicit scope for the package keyword yet
          //  can be targeted with the scope below, but scope is too broad
          "variable.other.readwrite"
        ],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "name": "BOLD ITALIC",
        "scope": [
          "variable.parameter.js",
          "storage.modifier.async.js",

          // import, from, export, default, return, if, for, break, continue, try, catch, finally,
          // throw, default, yield, await
          "keyword.control",
          "storage.type"
        ],
        "settings": {
          "fontStyle": "italic bold"
        }
      },
      {
        "name": "BOLD",
        "scope": [
          "keyword.other.definition.ini",

          // new
          "keyword.operator.new",
          "variable.parameter"
        ],
        "settings": {
          "fontStyle": "bold"
        }
      }
    ]
  },
  "tabnine.experimentalAutoImports": true,
  "markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": true,
  "powermode.enabled": true,
  "files.autoSave": "afterDelay",
  "editor.guides.bracketPairs": true,
  "workbench.iconTheme": "material-icon-theme",
  "liveServer.settings.donotShowInfoMsg": true,
  "tailwindCSS.includeLanguages": {
    "html": "HTML",
    "javascript": "javascript",
    "css": "css"
  },
  "editor.quickSuggestions": {
    "strings": true
  },
  "explorer.compactFolders": false,
  "editor.mouseWheelZoom": true,
  "workbench.sideBar.location": "left",
  "tailwind-fold.foldStyle": "QUOTES",
  "tailwind-fold.autoFold": false,
  "console-ninja.featureSet": "Community",
  "terminal.integrated.env.windows": {},
  "editor.tabSize": 2,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "window.customTitleBarVisibility": "windowed",
  "editor.renderWhitespace": "boundary",
  "git.autofetch": true,
  "cSpell.userWords": [
    "autoincrement",
    "Cloudinary",
    "persistor",
    "tseslint",
    "webrtc"
  ],
  "markdown-pdf.highlightStyle": "github.css",
  "[sql]": {
    "editor.defaultFormatter": "cweijan.vscode-postgresql-client2"
  },
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },
  "workbench.colorTheme": "Ayu Mirage Bordered",
  "codeium.enableConfig": {
    "*": true,
    "prisma": true,
    "tailwindcss": true
  }
}
